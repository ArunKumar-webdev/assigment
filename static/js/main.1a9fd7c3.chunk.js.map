{"version":3,"sources":["style.js","Popup.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","main","display","backgroundColor","height","margin","mainbtnSegment","marginTop","marginLeft","border","color","mainbtn","textTransform","fontSize","btnCancel","popup","btnSegment","txtfield","width","middle","overflowY","autoComplete2","divautoComplete","divbtnSave","alignItems","position","bottom","btnSave","link","divauto2","disauto2","optionsList","label","value","randomColors","Popup","click","React","options","setoptions","inputValue","setInputValue","array","setarray","setValue","value1","setValue1","text","setText","handleLink","Math","floor","random","toString","dummyarr","push","uniqueOptions","Set","arropt","filter","val","handleSubmit","e","preventDefault","handleClick_Cancel","postUser","payload","segment_name","schema","alert","JSON","stringify","axios","post","then","response","console","log","catch","error","classes","onSubmit","className","Button","onClick","style","Typography","TextField","size","placeholder","onChange","target","Box","sx","justifyContent","p","m","bgcolor","borderRadius","marginRight","id","length","map","item","index","Autocomplete","event","newValue","a","i","autoarr","options2","val1","val2","handleAuto2","disablePortal","renderInput","params","splice","opt","handleClick","handleonchange_Auto2","onInputChange","newInputValue","handleInput","getOptionDisabled","option","Link","type","ControllableStates","right","state","setState","toggleDrawer","anchor","open","class","Drawer","onClose","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1a9fd7c3.chunk.js","sourcesContent":["import { makeStyles } from \"@mui/styles\";\r\nimport { display } from \"@mui/system\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    display: \"flex\",\r\n    backgroundColor: \"rgb(67, 201, 206)\",\r\n    height: \"80px\",\r\n    margin: \"-8px\"\r\n  },\r\n  mainbtnSegment: {\r\n    marginTop: \"50px\",\r\n    marginLeft: \"50px\",\r\n    border: \"5px solid white\",\r\n    backgroundColor: \"grey\",\r\n    color: \"white\"\r\n  },\r\n  mainbtn: {\r\n    color: \"white\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"20px\"\r\n  },\r\n  btnCancel: {\r\n    color: \"grey\",\r\n    backgroundColor: \"white\",\r\n    marginLeft: \"10px\",\r\n    textTransform: \"capitalize\"\r\n  },\r\n  popup: {\r\n    display: \"flex\",\r\n    backgroundColor: \"rgb(67, 201, 206)\",\r\n    height: \"80px\"\r\n  },\r\n  btnSegment: {\r\n    color: \"white\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"20px\"\r\n  },\r\n  txtfield: {\r\n    width: \"450px\"\r\n  },\r\n  middle: {\r\n    height: \"80vh\",\r\n    overflowY: \"auto\"\r\n  },\r\n  autoComplete2: {\r\n    margin: \"10px\"\r\n  },\r\n  divautoComplete: {\r\n    border: \"3px solid white\",\r\n    marginLeft: \"10px\",\r\n    display: \"flex\"\r\n  },\r\n  divbtnSave: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"lightblue\",\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    height: \"80px\",\r\n    width: \"100%\"\r\n  },\r\n  btnSave: {\r\n    color: \"white\",\r\n    backgroundColor: \"grey\",\r\n    marginLeft: \"10px\",\r\n    textTransform: \"none\"\r\n  },\r\n  link: {\r\n    fontSize: \"12px\",\r\n  },\r\n  divauto2: {\r\n    border: \"3px solid lightblue\"\r\n  },\r\n  disauto2: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n","import * as React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport Link from \"@mui/material/Link\";\r\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft';\r\nimport axios from \"axios\";\r\nimport { useStyles } from \"./style\";\r\nimport Box, { BoxProps } from '@mui/material/Box';\r\n\r\nconst optionsList = [\r\n  { label: \"First Name\", value: \"first_name\" },\r\n  { label: \"Last Name\", value: \"last_name\" },\r\n  { label: \"Gender\", value: \"gender\" },\r\n  { label: \"Age\", value: \"age\" },\r\n  { label: \"Account Name\", value: \"account_name\" },\r\n  { label: \"City\", value: \"city\" },\r\n  { label: \"State\", value: \"state\" }\r\n];\r\n\r\nlet randomColors = '#ADD8E6';\r\n\r\nconst Popup = ({ click }) => {\r\n\r\n  const [options, setoptions] = React.useState(optionsList);\r\n  const [inputValue, setInputValue] = React.useState([]);\r\n  const [array, setarray] = React.useState([]);\r\n  const [value, setValue] = React.useState([]);\r\n  const [value1, setValue1] = React.useState([]);\r\n  const [text, setText] = React.useState(\"\");\r\n\r\n  const handleClick = (item, index) => {\r\n    array.splice(index, 1);\r\n    const a = [...array];\r\n    setarray(a);\r\n    const opt = [...options];\r\n\r\n    opt.push(item);\r\n\r\n    setoptions(opt);\r\n  };\r\n\r\n  const handleLink = () => {\r\n    randomColor();\r\n    const dummyarr = [...array];\r\n    if (inputValue !== \"\") {\r\n      dummyarr.push(value);\r\n\r\n      let uniqueOptions = [...new Set(dummyarr)];\r\n      setarray(uniqueOptions);\r\n      const arropt = options.filter((val) => val.value !== value.value);\r\n      setoptions(arropt);\r\n      setValue1(\"\");\r\n    }\r\n  };\r\n  const handleInput = (e, newInputValue) => {\r\n    setInputValue(newInputValue);\r\n    setValue1(newInputValue);\r\n  };\r\n\r\n  const handleonchange_Auto2 = (e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    handleClick_Cancel();\r\n    postUser();\r\n  };\r\n\r\n  const handleClick_Cancel = () => {\r\n    click(\"right\", false);\r\n  };\r\n\r\n\r\n  function randomColor() {\r\n    randomColors = Math.floor(Math.random() * 16777215).toString(16);\r\n    return randomColors;\r\n\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleAuto2 = (newValue, a, i) => {\r\n    const autoarr = array;\r\n    autoarr[i] = newValue;\r\n    var options2 = [...optionsList];\r\n    autoarr.map((val1, index) => {\r\n      options2 = options2.filter((val2) => val2?.value !== val1?.value);\r\n    });\r\n    setoptions(options2);\r\n  };\r\n\r\n  async function postUser() {\r\n    let payload = {\r\n      segment_name: text,\r\n      schema: array\r\n    };\r\n    alert(JSON.stringify(payload));\r\n    axios\r\n      .post(\r\n        \"https://webhook.site/3b144348-9bd4-4839-ad5f-bb687bfee3c1\",\r\n        payload\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <diV className={classes.popup}>\r\n          <Button className={classes.btnSegment} onClick={handleClick_Cancel}>\r\n            <KeyboardArrowLeftIcon /> Saving Segment\r\n          </Button>\r\n        </diV>\r\n        <div className={classes.middle}>\r\n          <div style={{ margin: \"25px\" }}>\r\n            <Typography>Enter the Name of the segment</Typography>\r\n            <br />\r\n            <div>\r\n              <TextField\r\n                className={classes.txtfield}\r\n                size=\"small\"\r\n                placeholder=\"Name of the segment\"\r\n                onChange={handleChange}\r\n              ></TextField>{\" \"}\r\n            </div>\r\n            <br />\r\n            <Typography>\r\n              To save your segment, you need to add the schemas to build the\r\n              query\r\n            </Typography>\r\n            <br />\r\n            <Box sx={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              p: 1,\r\n              m: 1,\r\n              bgcolor: 'background.paper',\r\n              borderRadius: 1,\r\n            }}>\r\n              <div style={{ display: \"flex\", alignItems: 'center', marginRight: \"1rem\" }} id='UserTraits'>\r\n                <div className=\"usertrait\">\r\n\r\n                </div>\r\n                <div>\r\n                  User Traits\r\n                </div>\r\n              </div>\r\n              <div style={{ display: \"flex\", alignItems: 'center' }} id='GroupTraits'>\r\n                <div className=\"GroupTraits\">\r\n\r\n                </div>\r\n                <div>\r\n                  Group Traits\r\n                </div>\r\n              </div>\r\n            </Box>\r\n            <div className={array.length ? classes.divauto2 : \"\"}>\r\n              {array.map((item, index) => {\r\n                return (\r\n                  <div className={classes.disauto2} key={index}>\r\n                    <div id='randomcolor' style={{ backgroundColor: '#' + randomColors, marginTop: '0' }} className=\"divautoComplete\"></div>\r\n                    <Autocomplete\r\n                      className={classes.autoComplete2}\r\n                      size=\"small\"\r\n                      value={item.label}\r\n                      onChange={(event, newValue) => {\r\n                        handleAuto2(newValue, item, index);\r\n                      }}\r\n                      disablePortal\r\n                      options={options}\r\n                      sx={{ width: 400 }}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          size=\"small\"\r\n                          style={{\r\n                            width: \"400px\"\r\n                          }}\r\n                          {...params}\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Button onClick={() => handleClick(item, index)}>\r\n                      <RemoveIcon />\r\n                    </Button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <br />\r\n            <div className={classes.divautoComplete}>\r\n              <div style={{ backgroundColor: randomColors }} className=\"divautoComplete\"></div>\r\n              <Autocomplete\r\n                value={value1}\r\n                onChange={(event, newValue) => {\r\n                  handleonchange_Auto2(event, newValue);\r\n                }}\r\n                inputValue={inputValue}\r\n                onInputChange={(event, newInputValue) => {\r\n                  handleInput(event, newInputValue);\r\n                }}\r\n                options={options}\r\n                sx={{ width: 300, margin: \"10px\" }}\r\n                getOptionDisabled={(option) => option === inputValue}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    size=\"small\"\r\n                    style={{ width: \"400px\" }}\r\n                    label=\"Add schema to segment\"\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n            <Button className={classes.link}>\r\n              <Link onClick={() => handleLink()}>+ Add new schema</Link>\r\n            </Button>\r\n          </div>\r\n        </div >\r\n        <div className={classes.divbtnSave}>\r\n          <Button className={classes.btnSave} type=\"submit\">\r\n            Save the Segment\r\n          </Button>\r\n          <Button className={classes.btnCancel} onClick={handleClick_Cancel}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </form >\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import * as React from \"react\";\nimport { Button } from \"@mui/material\";\nimport Popup from \"./Popup\";\nimport Drawer from \"@mui/material/Drawer\";\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft';\nimport \"./styles.css\";\n\nexport default function ControllableStates() {\n  const [state, setState] = React.useState({\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => {\n    setState({ ...state, [anchor]: open });\n  };\n\n  return (\n    <div className=\"\">\n      <diV class=\"main\">\n        <Button\n          style={{\n            color: \"white\",\n            textTransform: \"capitalize\",\n            fontSize: \"20px\"\n          }}\n        >\n          <KeyboardArrowLeftIcon /> View Audience\n        </Button>\n      </diV>\n\n      {[\"right\"].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button\n            class=\"mainbtnSegment\"\n            onClick={() => toggleDrawer(anchor, true)}\n          >\n            Save Segment\n          </Button>\n\n          <Drawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={() => toggleDrawer(anchor, false)}\n          >\n            <Popup click={toggleDrawer} />\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}