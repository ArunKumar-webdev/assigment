{"version":3,"sources":["style.js","Slider.js","App.js","index.js"],"names":["stylesheet","makeStyles","theme","main","display","backgroundColor","height","margin","divarea","border","marginLeft","btnCancel","color","textTransform","slider","btnSegment","fontSize","txtfield","width","middle","overflowY","btnSave","link","auto1","mainbtn","auto2","div2","alignItems","divbtnSave","position","bottom","list","label","value","Slider","click","useState","randomColors","setrandomColors","options","setoptions","inputValue","setInputValue","array","setarray","setValue","value1","setValue1","text","setText","useLayoutEffect","window","spinner","document","getElementById","style","handleLink","colors","Math","floor","random","toString","randomColor","dummyarr","push","uniqueOptions","Set","arropt","filter","val","handleSubmit","e","preventDefault","handleClick_Cancel","postUser","sentValues","segment_name","schema","axios","post","then","response","catch","error","stylee","onSubmit","className","Button","onClick","Typography","TextField","size","placeholder","onChange","target","Box","sx","justifyContent","p","m","bgcolor","borderRadius","marginRight","id","length","map","item","index","marginTop","Autocomplete","event","newValue","a","i","autoarr","options2","val1","val2","handleAuto2","disablePortal","renderInput","params","splice","opt","handleClick","handleonchange2","onInputChange","newInputValue","handleInput","getOptionDisabled","option","Link","d","type","Alert","React","props","ref","elevation","variant","ControllableStates","right","state","setState","open","setOpen","toggleDrawer","anchor","handleClose","reason","Drawer","onClose","Snackbar","autoHideDuration","severity","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.1733911c.chunk.js","sourcesContent":["import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const stylesheet = makeStyles((theme) => ({\r\n  main: {\r\n    display: \"flex\",\r\n    backgroundColor: \"rgb(67, 201, 206)\",\r\n    height: \"80px\",\r\n    margin: \"-8px\"\r\n  },\r\n  divarea: {\r\n    border: \"3px solid white\",\r\n    marginLeft: \"10px\",\r\n    display: \"flex\"\r\n  },\r\n  btnCancel: {\r\n    color: \"grey\",\r\n    backgroundColor: \"white\",\r\n    marginLeft: \"10px\",\r\n    textTransform: \"capitalize\"\r\n  },\r\n  slider: {\r\n    display: \"flex\",\r\n    backgroundColor: \"rgb(67, 201, 206)\",\r\n    height: \"80px\"\r\n  },\r\n  btnSegment: {\r\n    color: \"white\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"20px\"\r\n  },\r\n  txtfield: {\r\n    width: \"450px\"\r\n  },\r\n  middle: {\r\n    height: \"80vh\",\r\n    overflowY: \"auto\"\r\n  },  \r\n  btnSave: {\r\n    color: \"white\",\r\n    backgroundColor: \"grey\",\r\n    marginLeft: \"10px\",\r\n    textTransform: \"none\"\r\n  },\r\n  link: {\r\n    fontSize: \"12px\",\r\n  },\r\n  auto1: {\r\n    margin: \"10px\"\r\n  },\r\n  mainbtn: {\r\n    color: \"white\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"20px\"\r\n  },  \r\n  auto2: {\r\n    border: \"3px solid #2596be\"\r\n  },\r\n  div2: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  divbtnSave: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"lightblue\",\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    height: \"80px\",\r\n    width: \"100%\"\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useState } from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport Link from \"@mui/material/Link\";\r\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft';\r\nimport axios from \"axios\";\r\nimport { stylesheet } from \"./style\";\r\nimport Box from '@mui/material/Box';\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport { useLayoutEffect } from \"react\";\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\nconst list = [\r\n  { label: \"First Name\", value: \"first_name\" },\r\n  { label: \"Last Name\", value: \"last_name\" },\r\n  { label: \"Gender\", value: \"gender\" },\r\n  { label: \"Age\", value: \"age\" },\r\n  { label: \"Account Name\", value: \"account_name\" },\r\n  { label: \"City\", value: \"city\" },\r\n  { label: \"State\", value: \"state\" }\r\n];\r\n\r\n\r\n\r\n\r\nconst Slider = ({ click }) => {\r\n\r\n  const [randomColors, setrandomColors] = useState('#ADD8E6');\r\n\r\n  const [options, setoptions] = useState(list);\r\n  const [inputValue, setInputValue] = useState([]);\r\n  const [array, setarray] = useState([]);\r\n  const [value, setValue] = useState([]);\r\n  const [value1, setValue1] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n\r\n\r\n\r\n  const handleClick = (item, index) => {\r\n    array.splice(index, 1);\r\n    const a = [...array];\r\n    setarray(a);\r\n    const opt = [...options];\r\n\r\n    opt.push(item);\r\n\r\n    setoptions(opt);\r\n  };\r\n\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      let spinner = document.getElementById(\"randomcolor0\");\r\n      if (spinner && spinner.style) {\r\n        spinner.style.backgroundColor = '#910606';\r\n      }\r\n\r\n    }\r\n  }, [randomColors])\r\n\r\n\r\n  const handleLink = () => {\r\n    randomColor();\r\n    const dummyarr = [...array];\r\n    if (inputValue !== \"\") {\r\n      if (randomColors === \"ADD8E6\") {\r\n        value['color'] = '910606';\r\n      } else {\r\n        value['color'] = randomColors;\r\n      }\r\n      dummyarr.push(value);\r\n      let uniqueOptions = [...new Set(dummyarr)];\r\n      setarray(uniqueOptions);\r\n      const arropt = options.filter((val) => val.value !== value.value);\r\n      setoptions(arropt);\r\n      setValue1(\"\");\r\n    }\r\n  };\r\n  const handleInput = (e, newInputValue) => {\r\n    setInputValue(newInputValue);\r\n    setValue1(newInputValue);\r\n  };\r\n\r\n  const handleonchange2 = (e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleClick_Cancel();\r\n    postUser();\r\n  };\r\n\r\n  const handleClick_Cancel = () => {\r\n    click(\"right\", false);\r\n  };\r\n\r\n\r\n  function randomColor() {\r\n    let colors = Math.floor(Math.random() * 16777215).toString(16);\r\n    setrandomColors(colors);\r\n\r\n  }\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleAuto2 = (newValue, a, i) => {\r\n    const autoarr = array;\r\n    autoarr[i] = newValue;\r\n    var options2 = [...list];\r\n    autoarr.map((val1, index) => {\r\n      options2 = options2.filter((val2) => val2?.value !== val1?.value);\r\n    });\r\n    setoptions(options2);\r\n  };\r\n\r\n  async function postUser() {\r\n    let sentValues = {\r\n      segment_name: text,\r\n      schema: array\r\n    };\r\n    axios\r\n      .post(\r\n        \"https://webhook.site/3b144348-9bd4-4839-ad5f-bb687bfee3c1\",\r\n        sentValues\r\n      )\r\n      .then(function (response) {\r\n\r\n      })\r\n      .catch(function (error) {\r\n      });\r\n  }\r\n\r\n  const stylee = stylesheet();\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <div className={stylee.slider}>\r\n          <Button className={stylee.btnSegment} onClick={handleClick_Cancel}>\r\n            <KeyboardArrowLeftIcon /> Saving Segment\r\n          </Button>\r\n        </div>\r\n        <div className={stylee.middle}>\r\n          <div style={{ margin: \"25px\" }}>\r\n            <Typography>Enter the Name of the segment</Typography>\r\n            <br />\r\n            <div>\r\n              <TextField\r\n                className={stylee.txtfield}\r\n                size=\"small\"\r\n                placeholder=\"Name of the segment\"\r\n                onChange={handleChange}\r\n              ></TextField>{\" \"}\r\n            </div>\r\n            <br />\r\n            <Typography>\r\n              To save your segment, you need to add the schemas to build the\r\n              query\r\n            </Typography>\r\n            <br />\r\n            <Box sx={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              p: 1,\r\n              m: 1,\r\n              bgcolor: 'background.paper',\r\n              borderRadius: 1,\r\n            }}>\r\n              <div style={{ display: \"flex\", alignItems: 'center', marginRight: \"1rem\" }} id='UserTraits'>\r\n                <div className=\"usertrait\">\r\n\r\n                </div>\r\n                <div>\r\n                  - User Traits\r\n                </div>\r\n              </div>\r\n              <div style={{ display: \"flex\", alignItems: 'center' }} id='GroupTraits'>\r\n                <div className=\"GroupTraits\">\r\n\r\n                </div>\r\n                <div>\r\n                  - Group Traits\r\n                </div>\r\n              </div>\r\n            </Box>\r\n            <div className={array.length ? stylee.auto2 : \"\"}>\r\n              {array.map((item, index) => {\r\n                return (\r\n                  <div className={stylee.div2} key={index}>\r\n                    <div id={'randomcolor' + index} style={{ backgroundColor: '#' + item.color, marginTop: '0' }} className=\"divautoComplete\"></div>\r\n                    <Autocomplete\r\n                      className={stylee.auto1}\r\n                      size=\"small\"\r\n                      value={item.label}\r\n                      onChange={(event, newValue) => {\r\n                        handleAuto2(newValue, item, index);\r\n                      }}\r\n                      disablePortal\r\n                      options={options}\r\n                      sx={{ width: 400 }}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          size=\"small\"\r\n                          style={{\r\n                            width: \"400px\"\r\n                          }}\r\n                          {...params}\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Button onClick={() => handleClick(item, index)}>\r\n                      <RemoveIcon />\r\n                    </Button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <br />\r\n            <div className={stylee.divarea}>\r\n              <div style={{ backgroundColor: randomColors }} className=\"divautoComplete\"></div>\r\n              <Autocomplete\r\n                value={value1}\r\n                onChange={(event, newValue) => {\r\n                  handleonchange2(event, newValue);\r\n                }}\r\n                inputValue={inputValue}\r\n                onInputChange={(event, newInputValue) => {\r\n                  handleInput(event, newInputValue);\r\n                }}\r\n                options={options}\r\n                sx={{ width: 300, margin: \"10px\" }}\r\n                getOptionDisabled={(option) => option === inputValue}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    size=\"small\"\r\n                    style={{ width: \"400px\" }}\r\n                    label=\"Add schema to segment\"\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n            <Button className={stylee.link}>\r\n              <div className=\"atag\">\r\n                <Link onClick={() => handleLink()}>+ Add new schema</Link>\r\n              </div>\r\n            </Button>\r\n          </div>\r\n        </div >\r\n        <div className={stylee.divbtnSave}>\r\n          <Button className={stylee.btnSave}d type=\"submit\">\r\n            Save the Segment\r\n          </Button>\r\n          <Button className={stylee.btnCancel} onClick={handleClick_Cancel}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </form >\r\n\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import * as React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport Slider from \"./Slider\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft';\r\nimport \"./styles.css\";\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function ControllableStates() {\r\n  const [state, setState] = React.useState({\r\n    right: false\r\n  });\r\n\r\n  const [open, setOpen] = React.useState();\r\n\r\n  const toggleDrawer = (anchor, open) => {\r\n\r\n    setState({ ...state, [anchor]: open });\r\n    if (!open) {\r\n      setOpen(true)\r\n    }\r\n\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"main\">\r\n        <Button\r\n          style={{\r\n            color: \"white\",\r\n            textTransform: \"capitalize\",\r\n            fontSize: \"20px\"\r\n          }}\r\n        >\r\n          <KeyboardArrowLeftIcon /> View Audience\r\n        </Button>\r\n      </div>\r\n\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <button\r\n            className=\"mainbtnSegment\"\r\n            onClick={() => toggleDrawer(anchor, true)}\r\n          >\r\n            Save Segment\r\n          </button>\r\n\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={() => toggleDrawer(anchor, false)}\r\n          >\r\n            <Slider click={toggleDrawer} />\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n      <Snackbar onClose={handleClose} open={open} autoHideDuration={2000}>\r\n        <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n          This is a success message!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}