{"version":3,"sources":["style.js","Slider.js","App.js","index.js"],"names":["stylesheet","makeStyles","theme","main","display","backgroundColor","height","margin","divarea","border","marginLeft","btnCancel","color","textTransform","slider","btnSegment","fontSize","txtfield","width","middle","overflowY","btnSave","link","auto1","mainbtn","auto2","div2","alignItems","divbtnSave","position","bottom","list","label","value","randomColors","Slider","click","useState","options","setoptions","inputValue","setInputValue","array","setarray","setValue","value1","setValue1","text","setText","handleLink","Math","floor","random","toString","dummyarr","push","uniqueOptions","Set","arropt","filter","val","handleSubmit","e","preventDefault","handleClick_Cancel","postUser","sentValues","segment_name","schema","axios","post","then","response","catch","error","stylee","onSubmit","className","Button","onClick","style","Typography","TextField","size","placeholder","onChange","target","Box","sx","justifyContent","p","m","bgcolor","borderRadius","marginRight","id","length","map","item","index","marginTop","Autocomplete","event","newValue","a","i","autoarr","options2","val1","val2","handleAuto2","disablePortal","renderInput","params","splice","opt","handleClick","handleonchange2","onInputChange","newInputValue","handleInput","getOptionDisabled","option","Link","type","ControllableStates","React","right","state","setState","toggleDrawer","anchor","open","Drawer","onClose","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sRAEaA,EAAaC,aAAW,SAACC,GAAD,MAAY,CAC/CC,KAAM,CACJC,QAAS,OACTC,gBAAiB,oBACjBC,OAAQ,OACRC,OAAQ,QAEVC,QAAS,CACPC,OAAQ,kBACRC,WAAY,OACZN,QAAS,QAEXO,UAAW,CACTC,MAAO,OACPP,gBAAiB,QACjBK,WAAY,OACZG,cAAe,cAEjBC,OAAQ,CACNV,QAAS,OACTC,gBAAiB,oBACjBC,OAAQ,QAEVS,WAAY,CACVH,MAAO,QACPC,cAAe,aACfG,SAAU,QAEZC,SAAU,CACRC,MAAO,SAETC,OAAQ,CACNb,OAAQ,OACRc,UAAW,QAEbC,QAAS,CACPT,MAAO,QACPP,gBAAiB,OACjBK,WAAY,OACZG,cAAe,QAEjBS,KAAM,CACJN,SAAU,QAEZO,MAAO,CACLhB,OAAQ,QAEViB,QAAS,CACPZ,MAAO,QACPC,cAAe,aACfG,SAAU,QAEZS,MAAO,CACLhB,OAAQ,qBAEViB,KAAM,CACJtB,QAAS,OACTuB,WAAY,UAEdC,WAAY,CACVxB,QAAS,OACTuB,WAAY,SACZtB,gBAAiB,YACjBwB,SAAU,WACVC,OAAQ,IACRxB,OAAQ,OACRY,MAAO,QAlE0B,I,2CCU/Ba,EAAO,CACX,CAAEC,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,eAAgBC,MAAO,gBAChC,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,QAASC,MAAO,UAGvBC,EAAe,UA4NJC,EA1NA,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEhB,EAA8BC,mBAASN,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA0BN,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcW,EAAd,KACA,EAA4BP,mBAAS,IAArC,mBAAOQ,EAAP,KAAeC,EAAf,KACA,EAAwBT,mBAAS,IAAjC,mBAAOU,EAAP,KAAaC,EAAb,KAaMC,EAAa,WAiCjBf,EAAegB,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,IA/B7D,IAAMC,EAAQ,YAAOZ,GACrB,GAAmB,KAAfF,EAAmB,CACrBc,EAASC,KAAKtB,GACd,IAAIuB,EAAa,YAAO,IAAIC,IAAIH,IAChCX,EAASa,GACT,IAAME,EAASpB,EAAQqB,QAAO,SAACC,GAAD,OAASA,EAAI3B,QAAUA,EAAMA,KAA7B,IAC9BM,EAAWmB,GACXZ,EAAU,GACX,CACF,EAUKe,EAAe,SAACC,GACpBA,EAAEC,iBACFC,IA3C0B,mCA4C1BC,EACD,EAEKD,EAAqB,WACzB5B,EAAM,SAAS,EAChB,EAjD2B,sDAwE5B,8FACM8B,EAAa,CACfC,aAAcpB,EACdqB,OAAQ1B,GAEV2B,IACGC,KACC,4DACAJ,GAEDK,MAAK,SAAUC,GACf,IACAC,OAAM,SAAUC,GAChB,IAbL,4CAxE4B,sBAwF5B,IAAMC,EAAS3E,IAEf,OACE,8BACE,uBAAM4E,SAAU,SAACd,GAAD,OAAOD,EAAaC,EAApB,EAAhB,UACE,qBAAKe,UAAWF,EAAO7D,OAAvB,SACE,eAACgE,EAAA,EAAD,CAAQD,UAAWF,EAAO5D,WAAYgE,QAASf,EAA/C,UACE,cAAC,IAAD,IADF,uBAIF,qBAAKa,UAAWF,EAAOxD,OAAvB,SACE,sBAAK6D,MAAO,CAAEzE,OAAQ,QAAtB,UACE,cAAC0E,EAAA,EAAD,4CACA,uBACA,gCACE,cAACC,EAAA,EAAD,CACEL,UAAWF,EAAO1D,SAClBkE,KAAK,QACLC,YAAY,sBACZC,SAjDO,SAACvB,GACpBd,EAAQc,EAAEwB,OAAOrD,MAClB,IAgDyB,OAEhB,uBACA,cAACgD,EAAA,EAAD,mFAIA,uBACA,eAACM,EAAA,EAAD,CAAKC,GAAI,CACPpF,QAAS,OACTqF,eAAgB,WAChBC,EAAG,EACHC,EAAG,EACHC,QAAS,mBACTC,aAAc,GANhB,UAQE,sBAAKb,MAAO,CAAE5E,QAAS,OAAQuB,WAAY,SAAUmE,YAAa,QAAUC,GAAG,aAA/E,UACE,qBAAKlB,UAAU,cAGf,mDAIF,sBAAKG,MAAO,CAAE5E,QAAS,OAAQuB,WAAY,UAAYoE,GAAG,cAA1D,UACE,qBAAKlB,UAAU,gBAGf,uDAKJ,qBAAKA,UAAWnC,EAAMsD,OAASrB,EAAOlD,MAAQ,GAA9C,SACGiB,EAAMuD,KAAI,SAACC,EAAMC,GAChB,OACE,sBAAKtB,UAAWF,EAAOjD,KAAvB,UACE,qBAAKqE,GAAG,cAAcf,MAAO,CAAE3E,gBAAiB,IAAM6B,EAAckE,UAAW,KAAOvB,UAAU,oBAChG,cAACwB,EAAA,EAAD,CACExB,UAAWF,EAAOpD,MAClB4D,KAAK,QACLlD,MAAOiE,EAAKlE,MACZqD,SAAU,SAACiB,EAAOC,IAxFlB,SAACA,EAAUC,EAAGC,GAChC,IAAMC,EAAUhE,EAChBgE,EAAQD,GAAKF,EACb,IAAII,EAAQ,UAAO5E,GACnB2E,EAAQT,KAAI,SAACW,EAAMT,GACjBQ,EAAWA,EAAShD,QAAO,SAACkD,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM5E,UAAN,OAAgB2E,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAM3E,MAAhC,GAC5B,IACDM,EAAWoE,EACZ,CAiFqBG,CAAYP,EAAUL,EAAMC,EAC7B,EACDY,eAAa,EACbzE,QAASA,EACTkD,GAAI,CAAEtE,MAAO,KACb8F,YAAa,SAACC,GAAD,OACX,cAAC/B,EAAA,EAAD,aACEC,KAAK,QACLH,MAAO,CACL9D,MAAO,UAEL+F,GANK,IAUf,cAACnC,EAAA,EAAD,CAAQC,QAAS,kBA7Jf,SAACmB,EAAMC,GACzBzD,EAAMwE,OAAOf,EAAO,GACpB,IAAMK,EAAC,YAAO9D,GACdC,EAAS6D,GACT,IAAMW,EAAG,YAAO7E,GAEhB6E,EAAI5D,KAAK2C,GAET3D,EAAW4E,EACZ,CAoJwCC,CAAYlB,EAAMC,EAAxB,EAAjB,SACE,cAAC,IAAD,QAvB8BA,EA2BrC,MAEH,uBACA,sBAAKtB,UAAWF,EAAOnE,QAAvB,UACE,qBAAKwE,MAAO,CAAE3E,gBAAiB6B,GAAgB2C,UAAU,oBACzD,cAACwB,EAAA,EAAD,CACEpE,MAAOY,EACPwC,SAAU,SAACiB,EAAOC,IA7IR,SAACzC,EAAGyC,GAC1B3D,EAAS2D,EACV,CA4Iec,CAAgBf,EAAOC,EACxB,EACD/D,WAAYA,EACZ8E,cAAe,SAAChB,EAAOiB,IAtJjB,SAACzD,EAAGyD,GACtB9E,EAAc8E,GACdzE,EAAUyE,EACX,CAoJeC,CAAYlB,EAAOiB,EACpB,EACDjF,QAASA,EACTkD,GAAI,CAAEtE,MAAO,IAAKX,OAAQ,QAC1BkH,kBAAmB,SAACC,GAAD,OAAYA,IAAWlF,CAAvB,EACnBwE,YAAa,SAACC,GAAD,OACX,cAAC/B,EAAA,EAAD,2BACM+B,GADN,IAEE9B,KAAK,QACLH,MAAO,CAAE9D,MAAO,SAChBc,MAAM,0BALG,OAUjB,cAAC8C,EAAA,EAAD,CAAQD,UAAWF,EAAOrD,KAA1B,SACE,qBAAKuD,UAAU,OAAf,SACE,cAAC8C,EAAA,EAAD,CAAM5C,QAAS,kBAAM9B,GAAN,EAAf,uCAKR,sBAAK4B,UAAWF,EAAO/C,WAAvB,UACE,cAACkD,EAAA,EAAD,CAAQD,UAAWF,EAAOtD,QAASuG,KAAK,SAAxC,8BAGA,cAAC9C,EAAA,EAAD,CAAQD,UAAWF,EAAOhE,UAAWoE,QAASf,EAA9C,2BAOT,E,gBCzOc,SAAS6D,IACtB,MAA0BC,WAAe,CACvCC,OAAO,IADT,mBAAOC,EAAP,KAAcC,EAAd,KAIMC,EAAe,SAACC,EAAQC,GAC5BH,EAAS,2BAAKD,GAAN,kBAAcG,EAASC,IAChC,EAED,OACE,sBAAKvD,UAAU,GAAf,UACE,qBAAKA,UAAU,OAAf,SACE,eAACC,EAAA,EAAD,CACEE,MAAO,CACLpE,MAAO,QACPC,cAAe,aACfG,SAAU,QAJd,UAOE,cAAC,IAAD,IAPF,sBAWD,CAAC,SAASiF,KAAI,SAACkC,GAAD,OACb,eAAC,WAAD,WACE,wBACEtD,UAAU,iBACVE,QAAS,kBAAMmD,EAAaC,GAAQ,EAA3B,EAFX,0BAOA,cAACE,EAAA,EAAD,CACEF,OAAQA,EACRC,KAAMJ,EAAMG,GACZG,QAAS,kBAAMJ,EAAaC,GAAQ,EAA3B,EAHX,SAKE,cAAC,EAAD,CAAQ/F,MAAO8F,QAbEC,EADR,MAoBpB,CC7CD,IAAMI,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,E","file":"static/js/main.0378c53c.chunk.js","sourcesContent":["import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const stylesheet = makeStyles((theme) => ({\r\n  main: {\r\n    display: \"flex\",\r\n    backgroundColor: \"rgb(67, 201, 206)\",\r\n    height: \"80px\",\r\n    margin: \"-8px\"\r\n  },\r\n  divarea: {\r\n    border: \"3px solid white\",\r\n    marginLeft: \"10px\",\r\n    display: \"flex\"\r\n  },\r\n  btnCancel: {\r\n    color: \"grey\",\r\n    backgroundColor: \"white\",\r\n    marginLeft: \"10px\",\r\n    textTransform: \"capitalize\"\r\n  },\r\n  slider: {\r\n    display: \"flex\",\r\n    backgroundColor: \"rgb(67, 201, 206)\",\r\n    height: \"80px\"\r\n  },\r\n  btnSegment: {\r\n    color: \"white\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"20px\"\r\n  },\r\n  txtfield: {\r\n    width: \"450px\"\r\n  },\r\n  middle: {\r\n    height: \"80vh\",\r\n    overflowY: \"auto\"\r\n  },  \r\n  btnSave: {\r\n    color: \"white\",\r\n    backgroundColor: \"grey\",\r\n    marginLeft: \"10px\",\r\n    textTransform: \"none\"\r\n  },\r\n  link: {\r\n    fontSize: \"12px\",\r\n  },\r\n  auto1: {\r\n    margin: \"10px\"\r\n  },\r\n  mainbtn: {\r\n    color: \"white\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"20px\"\r\n  },  \r\n  auto2: {\r\n    border: \"3px solid #2596be\"\r\n  },\r\n  div2: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  divbtnSave: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"lightblue\",\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    height: \"80px\",\r\n    width: \"100%\"\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useState } from \"react\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport Link from \"@mui/material/Link\";\r\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft';\r\nimport axios from \"axios\";\r\nimport { stylesheet } from \"./style\";\r\nimport Box from '@mui/material/Box';\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\n\r\nconst list = [\r\n  { label: \"First Name\", value: \"first_name\" },\r\n  { label: \"Last Name\", value: \"last_name\" },\r\n  { label: \"Gender\", value: \"gender\" },\r\n  { label: \"Age\", value: \"age\" },\r\n  { label: \"Account Name\", value: \"account_name\" },\r\n  { label: \"City\", value: \"city\" },\r\n  { label: \"State\", value: \"state\" }\r\n];\r\n\r\nlet randomColors = '#ADD8E6';\r\n\r\nconst Slider = ({ click }) => {\r\n\r\n  const [options, setoptions] = useState(list);\r\n  const [inputValue, setInputValue] = useState([]);\r\n  const [array, setarray] = useState([]);\r\n  const [value, setValue] = useState([]);\r\n  const [value1, setValue1] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleClick = (item, index) => {\r\n    array.splice(index, 1);\r\n    const a = [...array];\r\n    setarray(a);\r\n    const opt = [...options];\r\n\r\n    opt.push(item);\r\n\r\n    setoptions(opt);\r\n  };\r\n\r\n  const handleLink = () => {\r\n    randomColor();\r\n    const dummyarr = [...array];\r\n    if (inputValue !== \"\") {\r\n      dummyarr.push(value);\r\n      let uniqueOptions = [...new Set(dummyarr)];\r\n      setarray(uniqueOptions);\r\n      const arropt = options.filter((val) => val.value !== value.value);\r\n      setoptions(arropt);\r\n      setValue1(\"\");\r\n    }\r\n  };\r\n  const handleInput = (e, newInputValue) => {\r\n    setInputValue(newInputValue);\r\n    setValue1(newInputValue);\r\n  };\r\n\r\n  const handleonchange2 = (e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleClick_Cancel();\r\n    postUser();\r\n  };\r\n\r\n  const handleClick_Cancel = () => {\r\n    click(\"right\", false);\r\n  };\r\n\r\n\r\n  function randomColor() {\r\n    randomColors = Math.floor(Math.random() * 16777215).toString(16);\r\n    return randomColors;\r\n\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleAuto2 = (newValue, a, i) => {\r\n    const autoarr = array;\r\n    autoarr[i] = newValue;\r\n    var options2 = [...list];\r\n    autoarr.map((val1, index) => {\r\n      options2 = options2.filter((val2) => val2?.value !== val1?.value);\r\n    });\r\n    setoptions(options2);\r\n  };\r\n\r\n  async function postUser() {\r\n    let sentValues = {\r\n      segment_name: text,\r\n      schema: array\r\n    };\r\n    axios\r\n      .post(\r\n        \"https://webhook.site/3b144348-9bd4-4839-ad5f-bb687bfee3c1\",\r\n        sentValues\r\n      )\r\n      .then(function (response) {\r\n      })\r\n      .catch(function (error) {\r\n      });\r\n  }\r\n\r\n  const stylee = stylesheet();\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <div className={stylee.slider}>\r\n          <Button className={stylee.btnSegment} onClick={handleClick_Cancel}>\r\n            <KeyboardArrowLeftIcon /> Saving Segment\r\n          </Button>\r\n        </div>\r\n        <div className={stylee.middle}>\r\n          <div style={{ margin: \"25px\" }}>\r\n            <Typography>Enter the Name of the segment</Typography>\r\n            <br />\r\n            <div>\r\n              <TextField\r\n                className={stylee.txtfield}\r\n                size=\"small\"\r\n                placeholder=\"Name of the segment\"\r\n                onChange={handleChange}\r\n              ></TextField>{\" \"}\r\n            </div>\r\n            <br />\r\n            <Typography>\r\n              To save your segment, you need to add the schemas to build the\r\n              query\r\n            </Typography>\r\n            <br />\r\n            <Box sx={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              p: 1,\r\n              m: 1,\r\n              bgcolor: 'background.paper',\r\n              borderRadius: 1,\r\n            }}>\r\n              <div style={{ display: \"flex\", alignItems: 'center', marginRight: \"1rem\" }} id='UserTraits'>\r\n                <div className=\"usertrait\">\r\n\r\n                </div>\r\n                <div>\r\n                  - User Traits\r\n                </div>\r\n              </div>\r\n              <div style={{ display: \"flex\", alignItems: 'center' }} id='GroupTraits'>\r\n                <div className=\"GroupTraits\">\r\n\r\n                </div>\r\n                <div>\r\n                  - Group Traits\r\n                </div>\r\n              </div>\r\n            </Box>\r\n            <div className={array.length ? stylee.auto2 : \"\"}>\r\n              {array.map((item, index) => {\r\n                return (\r\n                  <div className={stylee.div2} key={index}>\r\n                    <div id='randomcolor' style={{ backgroundColor: '#' + randomColors, marginTop: '0' }} className=\"divautoComplete\"></div>\r\n                    <Autocomplete\r\n                      className={stylee.auto1}\r\n                      size=\"small\"\r\n                      value={item.label}\r\n                      onChange={(event, newValue) => {\r\n                        handleAuto2(newValue, item, index);\r\n                      }}\r\n                      disablePortal\r\n                      options={options}\r\n                      sx={{ width: 400 }}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          size=\"small\"\r\n                          style={{\r\n                            width: \"400px\"\r\n                          }}\r\n                          {...params}\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Button onClick={() => handleClick(item, index)}>\r\n                      <RemoveIcon />\r\n                    </Button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <br />\r\n            <div className={stylee.divarea}>\r\n              <div style={{ backgroundColor: randomColors }} className=\"divautoComplete\"></div>\r\n              <Autocomplete\r\n                value={value1}\r\n                onChange={(event, newValue) => {\r\n                  handleonchange2(event, newValue);\r\n                }}\r\n                inputValue={inputValue}\r\n                onInputChange={(event, newInputValue) => {\r\n                  handleInput(event, newInputValue);\r\n                }}\r\n                options={options}\r\n                sx={{ width: 300, margin: \"10px\" }}\r\n                getOptionDisabled={(option) => option === inputValue}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    size=\"small\"\r\n                    style={{ width: \"400px\" }}\r\n                    label=\"Add schema to segment\"\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n            <Button className={stylee.link}>\r\n              <div className=\"atag\">\r\n                <Link onClick={() => handleLink()}>+ Add new schema</Link>\r\n              </div>\r\n            </Button>\r\n          </div>\r\n        </div >\r\n        <div className={stylee.divbtnSave}>\r\n          <Button className={stylee.btnSave} type=\"submit\">\r\n            Save the Segment\r\n          </Button>\r\n          <Button className={stylee.btnCancel} onClick={handleClick_Cancel}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </form >\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import * as React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport Slider from \"./Slider\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft';\r\nimport \"./styles.css\";\r\n\r\nexport default function ControllableStates() {\r\n  const [state, setState] = React.useState({\r\n    right: false\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => {\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"main\">\r\n        <Button\r\n          style={{\r\n            color: \"white\",\r\n            textTransform: \"capitalize\",\r\n            fontSize: \"20px\"\r\n          }}\r\n        >\r\n          <KeyboardArrowLeftIcon /> View Audience\r\n        </Button>\r\n      </div>\r\n\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <button\r\n            className=\"mainbtnSegment\"\r\n            onClick={() => toggleDrawer(anchor, true)}\r\n          >\r\n            Save Segment\r\n          </button>\r\n\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={() => toggleDrawer(anchor, false)}\r\n          >\r\n            <Slider click={toggleDrawer} />\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}